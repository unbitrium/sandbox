#!/bin/sh

sandbox_shell_hypervisor_process() {
	mount -t tmpfs tmpfs $SANDBOX_ROOT
	mkdir "$SANDBOX_ROOT/root"
	sandbox_mounts "$SANDBOX_ROOT/root"
	exec 3<&0 # stash stdin here to feed to child
	DO_NETWORK=`type sandbox_network`
	if [ $? = 0 ] ;then
		unshare -uinm $0 $1 .child <&3 &
		SANDBOX_PID=$!
		sandbox_network "$SANDBOX_ROOT" $SANDBOX_PID
	else
		unshare -uim $0 $1 .child <&3 &
		SANDBOX_PID=$!
	fi
	trap "kill $SANDBOX_PID" TERM
	wait
	trap "" exit INT TERM
	DO_CLEANUP=`type sandbox_cleanup`
	if [ $? = 0 ] ;then
		sandbox_cleanup "$SANDBOX_ROOT" $SANDBOX_PID
	fi
	exit $?
}
sandbox_shell_child_process() {
	pivot_root "$SANDBOX_ROOT/root" "$SANDBOX_ROOT/root/$SANDBOX_TMP"
	umount $SANDBOX_TMP -l
	cd "/"
	run_environment $ARGS
	exit $?
}

CONFIG=$1
if [ -f "$CONFIG" ]; then
	if [ -f "./$CONFIG" ]; then
		. ./$CONFIG
	else
		. $CONFIG
	fi
else
	echo "Unable to load config"
	exit 1
fi

if [ "$2" = ".hypervisor" ]; then
	sandbox_shell_hypervisor_process $1
	exit $?
fi

if [ "$2" = ".child" ]; then
	sandbox_shell_child_process $1
	exit $?
fi

if [ ! $SANDBOX_ROOT ]; then
	export SANDBOX_ROOT=`mktemp --tmpdir -d jailXXXXXXXXXX`
	export SANDBOX_TMP="/mnt"
	shift 1
	export ARGS=$@
fi

unshare -m $0 $CONFIG .hypervisor
rm $SANDBOX_ROOT -r

